env:
  global:
  - secure: sdaiqH9VXuVlCX2cQtZADs9GWuwdVJYF2HlDEOr/Q0KcI0w2x5L/wDmDMm+4AzqObVf1lZpte54P6tddxWMuyq1km7QtOMdhjMgzTzwpIlwhvOvHLfCb4elyV1qbxXVwxg+NKGE460syZjPenkyUCClVx83+J+NF68psjR4VLQnI/SaByNAIKMgClUBMri4aFlisu/wdYG/+ZT+w482COUmYnYvaTyK0ovbZjBh4lmoMgTEunX69cVfiBrLIAmKjW8J9ufB4upMo8XMcGOle1esATpEcrPNt0u9VDMTFM77La7KApohU3izXH0yb4swOGir49MX4T2FS5+SfuPLoalJuDQU6ceUb/iuuI2rBM0vqHnUwB47IyT3IrS9pTBv2kzv7a7mS5Ymw2i4AXeGuwgzry6mcJefQ2K1Ch6556VmmCz79z/HBaAIQYFitKFAr8hluMJic+XnQT5yKxUEihp8F1idVLH9Fc5Ju/f02cweFLudQAf3EkToy71haSQF6k4KU06nxmMrPBAHdVMvtc+0UPujYXJr/YfrCe/xz8NvKlFc/vVflUYzMkQx7VTj979GuvC7Ik5BkzGpyoDEtzAKfxXx+7paw1LGjzs/rR0KON2gScT12KAgrn0SlZG1AD32l75CIdrIkp2SxX7AhiLw2XaTFX1gW3/E3ZF6fgSg=
  - FFIDest=$TRAVIS_BUILD_DIR/app/api/ffi
  - PROJECT_NAME=safe_launcher

matrix:
  include:
  - os: linux
    env: |
      PLATFORM=linux-x64
      PLATFORM_NAME=linux
  - os: osx
    env: |
      PLATFORM=osx-x64
      PLATFORM_NAME=darwin
language: generic

python:
  - '2.7'

osx_image: xcode7.2

sudo: required

dist: trusty

cache:
  cargo: true

addons:
  apt:
    packages:
      - xvfb

before_install:
  - export PROJECT_VERSION=$(git log -1 | grep -i "version change to" | sed "s/.*[vV]ersion change to v\{0,1\}//")
  - export PACKAGE_NAME="$PROJECT_NAME-v$PROJECT_VERSION-$PLATFORM_NAME-x64"
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libnotify4; sudo apt-get install libgconf-2-4; fi
install:
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - curl -sSf https://static.rust-lang.org/rustup.sh | sh
  - rustc -V
  - cargo -V
  - curl -sSLO https://github.com/maidsafe/QA/raw/master/Bash%20Scripts/Travis/install_libsodium.sh
  - ". install_libsodium.sh"
  - nvm --version
  - nvm install 5.5.0
  - node --version
  - npm --version
  - python --version

script:
  - cd $TRAVIS_BUILD_DIR
  - git clone https://github.com/maidsafe/safe_core.git && cd safe_core
  - cargo build --release --verbose --features use-mock-routing
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp ./target/release/libsafe_core.dylib $FFIDest; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./target/release/libsafe_core.so $FFIDest; fi
  - cd $TRAVIS_BUILD_DIR
  - npm install
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then npm install -g electron-prebuilt; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then npm install -g gulp-electron-mocha; fi
  - npm test

before_deploy:
  - cd $TRAVIS_BUILD_DIR
  - cd safe_core
  - cargo build --release
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./target/release/libsafe_core.so $FFIDest; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp ./target/release/libsafe_core.dylib $FFIDest; fi
  - cd $TRAVIS_BUILD_DIR
  - git config --global user.name shankar2105
  - git config --global user.email shankar21mail@gmail.com
  - git fetch --tags
  - if [ -z $(git tag -l "$PROJECT_VERSION") ]; then git tag $PROJECT_VERSION -am "Version $PROJECT_VERSION" $TRAVIS_COMMIT; git push https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG} tag $PROJECT_VERSION > /dev/null 2>&1; fi
  - npm run package
  - git clone https://${GH_TOKEN}@github.com/maidsafe/release_config
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv release_config/safe_launcher/* app_dist/$PACKAGE_NAME/; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv release_config/safe_launcher/safe_launcher.crust.config release_config/safe_launcher/safe_launcher-v$PROJECT_VERSION\ Helper.crust.config; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv release_config/safe_launcher/* app_dist/$PACKAGE_NAME/safe_launcher-v$PROJECT_VERSION.app/Contents/Frameworks/safe_launcher-v$PROJECT_VERSION\ Helper.app/Contents/MacOS/; fi
  - pushd ./app_dist
  - tar czf ../${PROJECT_NAME}-v${PROJECT_VERSION}-${PLATFORM}.tar.gz *
  - popd
  - cd $TRAVIS_BUILD_DIR

deploy:
  provider: releases
  api_key: ${GH_TOKEN}
  file: "${PROJECT_NAME}-v${PROJECT_VERSION}-${PLATFORM}.tar.gz"
  skip_cleanup: true
  tag_name: "${PROJECT_VERSION}"
  draft: true
  on:
    all_branches: true
    condition: |
      (-n "$PROJECT_VERSION") && (-n "$PLATFORM")
